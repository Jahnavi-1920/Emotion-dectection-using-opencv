{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":1351797,"sourceType":"datasetVersion","datasetId":786787}],"dockerImageVersionId":30699,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:54:33.760297Z\",\"iopub.execute_input\":\"2024-04-30T12:54:33.760999Z\",\"iopub.status.idle\":\"2024-04-30T12:54:33.765572Z\",\"shell.execute_reply.started\":\"2024-04-30T12:54:33.760967Z\",\"shell.execute_reply\":\"2024-04-30T12:54:33.764410Z\"}}\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:54:35.745046Z\",\"iopub.execute_input\":\"2024-04-30T12:54:35.745875Z\",\"iopub.status.idle\":\"2024-04-30T12:54:47.929169Z\",\"shell.execute_reply.started\":\"2024-04-30T12:54:35.745806Z\",\"shell.execute_reply\":\"2024-04-30T12:54:47.928038Z\"}}\npip install utils\npip install livelossplot\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:55:14.802634Z\",\"iopub.execute_input\":\"2024-04-30T12:55:14.802962Z\",\"iopub.status.idle\":\"2024-04-30T12:55:14.825211Z\",\"shell.execute_reply.started\":\"2024-04-30T12:55:14.802930Z\",\"shell.execute_reply\":\"2024-04-30T12:55:14.824147Z\"}}\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport utils\nimport os\n%matplotlib inline\n\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.layers import Dense, Input, Dropout,Flatten, Conv2D\nfrom tensorflow.keras.layers import BatchNormalization, Activation, MaxPooling2D\nfrom tensorflow.keras.models import Model, Sequential\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.callbacks import ModelCheckpoint, ReduceLROnPlateau\nfrom tensorflow.keras.utils import plot_model\n\nfrom IPython.display import SVG, Image\nfrom livelossplot import PlotLossesKeras\nfrom livelossplot.keras import PlotLossesCallback\nimport tensorflow as tf\nprint(\"Tensorflow version:\", tf.__version__)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:55:02.681882Z\",\"iopub.execute_input\":\"2024-04-30T12:55:02.682244Z\",\"iopub.status.idle\":\"2024-04-30T12:55:14.800738Z\",\"shell.execute_reply.started\":\"2024-04-30T12:55:02.682215Z\",\"shell.execute_reply\":\"2024-04-30T12:55:14.799551Z\"}}\n\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:55:14.826357Z\",\"iopub.execute_input\":\"2024-04-30T12:55:14.826734Z\",\"iopub.status.idle\":\"2024-04-30T12:55:14.849091Z\",\"shell.execute_reply.started\":\"2024-04-30T12:55:14.826704Z\",\"shell.execute_reply\":\"2024-04-30T12:55:14.848223Z\"}}\nfor expression in os.listdir(\"/kaggle/input/fer2013/train/\"):\n    print(str(len(os.listdir(\"/kaggle/input/fer2013/train/\"+expression))) + \" \"+expression + \" images\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:55:15.920451Z\",\"iopub.execute_input\":\"2024-04-30T12:55:15.920912Z\",\"iopub.status.idle\":\"2024-04-30T12:55:22.199732Z\",\"shell.execute_reply.started\":\"2024-04-30T12:55:15.920876Z\",\"shell.execute_reply\":\"2024-04-30T12:55:22.199000Z\"}}\nimg_size = 48\nbatch_size = 64\ndatagen_train = ImageDataGenerator(horizontal_flip=True)\ntrain_generator=datagen_train.flow_from_directory(\"/kaggle/input/fer2013/train/\",\n                                                 target_size=(img_size, img_size),\n                                                 color_mode='grayscale',\n                                                 batch_size=batch_size,\n                                                 class_mode='categorical',\n                                                 shuffle=True)\ndatagen_validation = ImageDataGenerator(horizontal_flip=True)\nvalidation_generator=datagen_validation.flow_from_directory(\"/kaggle/input/fer2013/test/\",\n                                                 target_size=(img_size, img_size),\n                                                 color_mode='grayscale',\n                                                 batch_size=batch_size,\n                                                 class_mode='categorical',\n                                                 shuffle=False)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:55:22.201139Z\",\"iopub.execute_input\":\"2024-04-30T12:55:22.201433Z\",\"iopub.status.idle\":\"2024-04-30T12:55:23.326307Z\",\"shell.execute_reply.started\":\"2024-04-30T12:55:22.201407Z\",\"shell.execute_reply\":\"2024-04-30T12:55:23.321662Z\"}}\nmodel = Sequential()\n# 1 - conv\nmodel.add(Conv2D(64,(3,3), padding='same', input_shape=(48,48,1)))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\n# 2 - conv\nmodel.add(Conv2D(128,(5,5), padding='same'))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\n# 3 - conv\nmodel.add(Conv2D(512,(3,3), padding='same'))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\n# 4 - conv\nmodel.add(Conv2D(512,(3,3), padding='same'))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(256))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.25))\n\nmodel.add(Dense(512))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.25))\n\nmodel.add(Dense(7,activation='softmax'))\n\n\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:55:28.159979Z\",\"iopub.execute_input\":\"2024-04-30T12:55:28.160835Z\",\"iopub.status.idle\":\"2024-04-30T12:55:28.165080Z\",\"shell.execute_reply.started\":\"2024-04-30T12:55:28.160782Z\",\"shell.execute_reply\":\"2024-04-30T12:55:28.164033Z\"}}\nfrom keras.optimizers import Adam\n\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:55:29.019523Z\",\"iopub.execute_input\":\"2024-04-30T12:55:29.020399Z\",\"iopub.status.idle\":\"2024-04-30T12:55:29.030988Z\",\"shell.execute_reply.started\":\"2024-04-30T12:55:29.020364Z\",\"shell.execute_reply\":\"2024-04-30T12:55:29.030265Z\"}}\nopt = Adam(learning_rate=0.0005)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:55:29.599967Z\",\"iopub.execute_input\":\"2024-04-30T12:55:29.600315Z\",\"iopub.status.idle\":\"2024-04-30T12:55:29.655469Z\",\"shell.execute_reply.started\":\"2024-04-30T12:55:29.600286Z\",\"shell.execute_reply\":\"2024-04-30T12:55:29.654632Z\"}}\n\nmodel.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])\nmodel.summary()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T12:55:32.680268Z\",\"iopub.execute_input\":\"2024-04-30T12:55:32.680648Z\",\"iopub.status.idle\":\"2024-04-30T13:10:44.455706Z\",\"shell.execute_reply.started\":\"2024-04-30T12:55:32.680618Z\",\"shell.execute_reply\":\"2024-04-30T13:10:44.454878Z\"}}\nepochs= 50\nsteps_per_epoch=train_generator.n//train_generator.batch_size\nvalidation_steps=validation_generator.n//validation_generator.batch_size\n\nreduce_lr= ReduceLROnPlateau(monitor='val_loss', factor=0.1, patience=2, min_lr=0.00001, mode='auto')\ncallbacks = [PlotLossesKeras(), reduce_lr]\nhistory = model.fit(\n    x=train_generator,\n    steps_per_epoch=steps_per_epoch,\n    epochs=epochs,\n    validation_data=validation_generator,\n    validation_steps=validation_steps,\n)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T13:10:47.245636Z\",\"iopub.execute_input\":\"2024-04-30T13:10:47.246318Z\",\"iopub.status.idle\":\"2024-04-30T13:10:54.615976Z\",\"shell.execute_reply.started\":\"2024-04-30T13:10:47.246284Z\",\"shell.execute_reply\":\"2024-04-30T13:10:54.614999Z\"}}\nimport numpy as np\nfrom sklearn.metrics import confusion_matrix, classification_report\n\n# Make predictions on the validation data\npredictions = model.predict(validation_generator)\n\n# Get the true labels\ntrue_labels = validation_generator.classes\n\n# Convert predicted probabilities to class labels\npredicted_labels = np.argmax(predictions, axis=1)\n\n# Generate the confusion matrix\nconf_matrix = confusion_matrix(true_labels, predicted_labels)\n\nprint(\"Confusion Matrix:\")\nprint(conf_matrix)\n\n# Generate classification report\nclass_report = classification_report(true_labels, predicted_labels)\nprint(\"\\nClassification Report:\")\nprint(class_report)\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-30T13:11:56.135516Z\",\"iopub.execute_input\":\"2024-04-30T13:11:56.136305Z\",\"iopub.status.idle\":\"2024-04-30T13:12:02.292631Z\",\"shell.execute_reply.started\":\"2024-04-30T13:11:56.136273Z\",\"shell.execute_reply\":\"2024-04-30T13:12:02.291322Z\"}}\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import confusion_matrix, classification_report\n\n# Make predictions on the validation data\npredictions = model.predict(validation_generator)\n\n# Get the true labels\ntrue_labels = validation_generator.classes\n\n# Convert predicted probabilities to class labels\npredicted_labels = np.argmax(predictions, axis=1)\n\n# Generate the confusion matrix\nconf_matrix = confusion_matrix(true_labels, predicted_labels)\n\n# Plot the confusion matrix using Seaborn\nplt.figure(figsize=(10, 8))\nsns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=class_names, yticklabels=class_names)\nplt.xlabel('Predicted Labels')\nplt.ylabel('True Labels')\nplt.title('Confusion Matrix')\nplt.show()\n\n\n# %% [code]\n","metadata":{"_uuid":"f2914689-1ef7-4527-842c-a9a2e2dee390","_cell_guid":"bad1b6a2-48ee-46a8-8c15-200fdda429c0","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}